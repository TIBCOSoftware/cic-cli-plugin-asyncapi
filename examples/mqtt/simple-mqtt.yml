asyncapi: '2.0.0'
id: 'urn:com:mqtt:server'
info:
  title: MQTT Application
  version: '1.0.0'
  description: MQTT Application
servers:
  production:
    url: tcp://localhost:1883
    description: Development server
    protocol: mqtt
    bindings:
      mqtt:
        clientId: guest
        cleanSession: true
        lastWill:
          topic: /last-wills
          qos: 2
          message: Guest gone offline.
          retain: false
        keepAlive: 60
        bindingVersion: 0.1.0
channels:
  /message:
    parameters:
      id:
        schema:
          type: string
    description: A message channel
    subscribe:
      summary: Get messages
      message:
        $ref: '#/components/messages/message'
        bindings:
          mqtt:
            retain: true
            qos: 2
    publish:
      summary: Send messages
      message:
        $ref: '#/components/messages/message'
        bindings:
          mqtt:
            retain: true
            qos: 2
  /dup:
    description: A duplicate message channel
    subscribe:
      summary: Get messages
      message:
        $ref: '#/components/messages/message'
    publish:
      summary: Send messages
      message:
        $ref: '#/components/messages/message'
components:
  messages:
    message:
      name: message
      title: A message
      summary: A message
      contentType: application/json
      payload:
        $ref: "#/components/schemas/message"
  schemas:
    message:
      type: object
